clDevinceInfo
-------------

Displays device information about installed OpenCL-compatile devices, 
and also runs test of various OpenCL functions.

Platform and device information can be displayed without any ancillary *.cl files,
but the various tests all require OpenCL files located in the application
home directory.

Source Files
-------------------------------------------------------------------------------
canvas.cpp / .h
Provides drawing functionaly for tests that invove the display of graphical information.

clBuffer.cpp / .h | test_memflags.cl
Test various OpenCL buffers.

clContext.cpp /.h
Tests the functionality of device contexts.  No .CL file is required.

clDeviceInfo.cpp / .h
Application entry point.

clDeviceInfo.ico
The program's icon file

clDeviceInfo.rc
The program's resource file

clEvent.cpp / .h | test_event.cl
Tests events and event timing information by drawing fractals.

clImage.cpp / .h | test_image.cl
Investigates image handling and transfer capabilities.

clKernel.cpp / .h | test_program.cl
Tests OpenCL kernels.

clMathInteger.cpp / .h | test_math_integer.cl
Executes a variety of OpenCL integer math functions.

clMathScalar.cpp / .h | test_math_scalar.cl
Executes a variety of OpenCL scalar math functions.

clMathVector.cpp / .h | test_math_vector.cl
Executes a variety of OpenCL vector math functions.

clPlatform.cpp / .h
Obtains information about the available OpenCL platforms.

clProgram.cpp / .h | test_program.cl
* Generic functions for loading programs from files.
* Tests the functionality of programs

clTranslateType.cpp / .h
This is a key reusable program module that translates nearly any type of 
OpenCL variable to text for display.

output.cpp / .h
Manages an output buffer that individual code modules write to for display
of output information.  It enables the persistent dispay of information
after an individual code module has finished executing.

Resource.h
Contains identifiers of program resources.

small.ico
THe programs small icon file.

stdafx.cpp / h
Standard code module generated by Visual Studio to enable
precompiled headers.

targetver.h
SDK file that supplies version number constants (e.g. for the operating system version)


To Do
-------------------------------------------------------------------------------
ver 0.1 
As this is the first cobbled-together version of the program, there is much to do. ;)
* convert program to use CApplication object for all the normal windows stuff.
* document program functions and key variables
* improve scrolling functionality (e.g. page up/down, keyboard responses, etc ... )
* add detail to program output so that it can be understood by someone without source code
* use "safe" functions (e.g. "*_s" functions).

Known Bugs
-------------------------------------------------------------------------------
This is ver 0.1.  It should be assumed that the entire program is a bug. ;)

